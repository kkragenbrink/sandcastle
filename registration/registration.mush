##############################################################################
## Invitations
##############################################################################
## Manages invitations to new users.
##
## @author      Kevin Kragenbrink <kevin@writh.net>
## @created     2013-02-21
## @modified    2013-02-26
## @license
##   Copyright (C) 2013 Kevin Kragenbrink <kevin@writh.net>
##
##   Permission is hereby granted, free of charge, to any person obtaining a
##   copy of this software and associated documentation files (the
##   "Software"), to deal in the Software without restriction, including
##   without limitation the rights to use, copy, modify, merge, publish,
##   distribute, sublicense, and/or sell copies of the Software, and to permit
##   persons to whom the Software is furnished to do so, subject to the
##   following conditions:
##
##   The above copyright notice and this permission notice shall be included
##   in all copies or substantial portions of the Software.
##
##   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
##   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
##   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
##   NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
##   DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
##   OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
##   USE OR OTHER DEALINGS IN THE SOFTWARE.
##############################################################################

@set me                                 = QUIET
-

########################################
## OBJECTS
########################################
think [ansi(hc, *)] Creating Objects.
-

think set(%!, VR:[ifelse(
    isdbref(setr(0, search(NAME=%[System%] Registration))),
    %q0,
    create(%[[ansi(hy, System)]%] Registration, 10)
)])
-

@set %vR                                = INHERIT
-

@link %vR                               = #2
-

@tel %vR                                = #2
-

########################################
## COMMANDS
########################################
think [ansi(hc, *)] Installing Commands.
-

&CMD`+INVITE %vR                        = $+invite *:
@assert u(%!/FUN`CAN_INVITE, %#) = {
    @pemit %# = u(%!/FUN`MESSAGE, u(MSG`PERMISSION_DENIED));
};
think setq(E, trim(%0));
@assert u(%!/FUN`IS_VALID_EMAIL, %qE) = {
    @pemit %# = u(%!/FUN`MESSAGE, u(MSG`EMAIL_INVALID, %qE));
};
@assert u(%!/FUN`IS_UNIQUE_EMAIL, %qE) = {
    @pemit %# = u(%!/FUN`MESSAGE, u(MSG`EMAIL_UNIQUE, %qE));
};
think setq(P, u(FUN`GENERATE_PASSWORD));
think setq(N, u(FUN`GENERATE_NAME));
@pcreate %qN = %qP;
think setq(D, pmatch(%qN));
@assert isdbref(%qD) = {
    @pemit %# = u(%!/FUN`MESSAGE, u(MSG`ERROR));
    @cemit [v(DAT`CHANNEL_BUGS)] = u(%!/FUN`MESSAGE, u(MSG`BUG, %qN));
};
@teleport %qD = [v(DAT`STARTING_ROOM)]; 
@email %qE/[u(MSG`EMAIL_SUBJECT)]=[u(MSG`EMAIL_BODY, name(%#), %qN, %qP, elements(convsecs(add(secs(), v(DAT`EXPIRATION_TIME))), 3 2 5))];
&_DAT`EMAIL %qD = %qE;
&_DAT`LAST_INVITE %# = [secs()];
@pemit %# = u(%!/FUN`MESSAGE, u(MSG`SUCCESS, %qE));
@cemit [v(DAT`CHANNEL_STAFF)] = u(%!/FUN`MESSAGE, u(MSG`INVITATION_NOTICE, %qE, %qN))
-

########################################
## FUNCTIONS
########################################
think [ansi(hc, *)] Installing Functions.
-

&FUN`CAN_INVITE %vR                     =
cor(
    hasflag(%0, STAFF),
    cand(
        not(hasflag(%0, NOINVITE)),
        gte(
            sub(secs(), xget(%0, _DAT`LAST_INVITE)),
            v(DAT`INVITE_FREQUENCY)
        )
    )
)
-

&FUN`GENERATE_NAME %vR                  =
[v(DAT`NAME_PREFIX)]-[u(FUN`GET_NEXT_INVITE_ID)]
-

&FUN`GENERATE_PASSWORD %vR              =
strip(iter(
    lnum(8),
    pickrand(v(DAT`VALID_PASSWORD_CHARACTERS))
), %b)
-

&FUN`GET_NEXT_INVITE_ID %vR             = set(%!, DAT`INVITES:[inc(v(DAT`INVITES))])[v(DAT`INVITES)]
-

&FUN`IS_UNIQUE_EMAIL %vR                =
eq(
    words(search(eplayer=strmatch(xget(##, _DAT`EMAIL), %0))),
    0
)
-

&FUN`IS_VALID_EMAIL %vR                 = regmatchi(%0, v(DAT`REGEXP_EMAIL))
-

&FUN`MESSAGE %vR                        = %0
-

########################################
## DATA
########################################
think [ansi(hc, *)] Installing Data.
-

&DAT`CHANNEL_BUGS %vR                   = Bugs
-
&DAT`CHANNEL_STAFF %vR                  = Staff
-
&DAT`EXPIRATION_TIME %vR                = 2592000
-
&DAT`INVITE_FREQUENCY %vR               = 86400
-
&DAT`NAME_PREFIX %vR                    = Artist
-
&DAT`REGEXP_EMAIL %vR                   = \b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b
-
&DAT`STARTING_ROOM %vR                  = #31
-
&DAT`VALID_PASSWORD_CHARACTERS %vR      = A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 ~ ! $ # ^ - _ + = | : < > . ?
-

########################################
## MESSAGES
########################################
think [ansi(hc, *)] Installing Messages.
-

&MSG`BUG %vR                            = Could not create player name '%0'.
-
&MSG`EMAIL_BODY %vR                     = %0 has invited you to join Sandbox MUSH.  To join in the fun, use a telnet client like MUSHClient* or TinyFugue** to connect with the following information:%r%r[space(4)]host: castle.writh.net%r[space(4)]port: 2860%r[space(4)]temp username: %1%r[space(4)]temp password: %2%r%rPlease remember to change your username (help @name) and password (help @password) once you have connected.%r%rIf you do not log in by %3, this invitation will expire and your login will be destroyed.%r%r* http://www.gammon.com.au/mushclient/mushclient.htm%r** https://github.com/Sketch/tinyfugue
-
&MSG`EMAIL_INVALID %vR                  = '%0' is not a valid email address.
-
&MSG`EMAIL_SUBJECT %vR                  = Sand Castle MUX Invitation
-
&MSG`EMAIL_UNIQUE %vR                   = '%0' already has an account.
-
&MSG`ERROR %vR                          = An error has occurred.
-
&MSG`INVITATION_NOTICE %vR              = An invitation has been sent to '%0' for '%1'.
-
&MSG`PERMISSION_DENIED %vR              = You are not allowed to send invitations at this time.
-
&MSG`SUCCESS %vR                        = An invitation has been sent to %0.
-

########################################
## FINISHING UP
########################################
think [ansi(hc, *)] Finishing Up.
-

@vR %!
-

@set %!                                 = !QUIET
-
